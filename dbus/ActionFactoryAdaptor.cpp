/*
 * This file was generated by dbusxml2cpp version 0.6
 * Command line was: dbusxml2cpp ActionFactory.xml -c ActionFactoryAdaptor -a ActionFactoryAdaptor
 *
 * dbusxml2cpp is Copyright (C) 2008 Nokia Corporation and/or its subsidiary(-ies).
 *
 * This is an auto-generated file.
 * Do not edit! All changes made to it will be lost.
 */

#include "ActionFactoryAdaptor.h"
#include <QtCore/QMetaObject>
#include <QtCore/QByteArray>
#include <QtCore/QList>
#include <QtCore/QMap>
#include <QtCore/QString>
#include <QtCore/QStringList>
#include <QtCore/QVariant>

/*
 * Implementation of adaptor class ActionFactoryAdaptor
 */

ActionFactoryAdaptor::ActionFactoryAdaptor(QObject *parent)
    : QDBusAbstractAdaptor(parent)
{
    // constructor
    setAutoRelaySignals(true);
}

ActionFactoryAdaptor::~ActionFactoryAdaptor()
{
    // destructor
}

QStringList ActionFactoryAdaptor::actionsListAsXml() const
{
    // get the value of property actionsListAsXml
    return qvariant_cast< QStringList >(parent()->property("actionsListAsXml"));
}

bool ActionFactoryAdaptor::targetExecutionLogEnabled() const
{
    // get the value of property targetExecutionLogEnabled
    return qvariant_cast< bool >(parent()->property("targetExecutionLogEnabled"));
}

QString ActionFactoryAdaptor::actionAsXml(const QString &point, const QStringList &args, int desiredRefreshMode)
{
    // handle method call it.elettra.trieste.TApplicationsInterface.actionFactory.actionAsXml
    QString action;
    QMetaObject::invokeMethod(parent(), "actionAsXml", Q_RETURN_ARG(QString, action), Q_ARG(QString, point), Q_ARG(QStringList, args), Q_ARG(int, desiredRefreshMode));
    return action;
}

