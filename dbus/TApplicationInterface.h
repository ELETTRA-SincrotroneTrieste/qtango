/*
 * This file was generated by dbusxml2cpp version 0.6
 * Command line was: dbusxml2cpp TApplication.xml -c TApplicationInterface -p TApplicationInterface
 *
 * dbusxml2cpp is Copyright (C) 2008 Nokia Corporation and/or its subsidiary(-ies).
 *
 * This is an auto-generated file.
 * Do not edit! All changes made to it will be lost.
 */

#ifndef TAPPLICATIONINTERFACE_H_1291642363
#define TAPPLICATIONINTERFACE_H_1291642363

#include <QtCore/QObject>
#include <QtCore/QByteArray>
#include <QtCore/QList>
#include <QtCore/QMap>
#include <QtCore/QString>
#include <QtCore/QStringList>
#include <QtCore/QVariant>
#include <QtDBus/QtDBus>

/*
 * Proxy class for interface it.elettra.trieste.TApplicationsInterface
 */
class TApplicationInterface: public QDBusAbstractInterface
{
    Q_OBJECT
public:
    static inline const char *staticInterfaceName()
    { return "it.elettra.trieste.TApplicationsInterface"; }

public:
    TApplicationInterface(const QString &service, const QString &path, const QDBusConnection &connection, QObject *parent = 0);

    ~TApplicationInterface();

    Q_PROPERTY(bool unique READ unique WRITE setUnique)
    inline bool unique() const
    { return qvariant_cast< bool >(internalPropGet("unique")); }
    inline void setUnique(bool value)
    { internalPropSet("unique", qVariantFromValue(value)); }

public Q_SLOTS: // METHODS
    inline QDBusReply<QString> executable()
    {
        QList<QVariant> argumentList;
        return callWithArgumentList(QDBus::Block, QLatin1String("executable"), argumentList);
    }

    inline QDBusReply<QDBusVariant> invokeMethod0(const QString &widgetName, const QString &member)
    {
        QList<QVariant> argumentList;
        argumentList << qVariantFromValue(widgetName) << qVariantFromValue(member);
        return callWithArgumentList(QDBus::Block, QLatin1String("invokeMethod0"), argumentList);
    }

    inline QDBusReply<QDBusVariant> invokeMethod1(const QString &widgetName, const QString &member, const QDBusVariant &val0)
    {
        QList<QVariant> argumentList;
        argumentList << qVariantFromValue(widgetName) << qVariantFromValue(member) << qVariantFromValue(val0);
        return callWithArgumentList(QDBus::Block, QLatin1String("invokeMethod1"), argumentList);
    }

    inline QDBusReply<QDBusVariant> invokeMethod2(const QString &widgetName, const QString &member, const QDBusVariant &val0, const QDBusVariant &val1)
    {
        QList<QVariant> argumentList;
        argumentList << qVariantFromValue(widgetName) << qVariantFromValue(member) << qVariantFromValue(val0) << qVariantFromValue(val1);
        return callWithArgumentList(QDBus::Block, QLatin1String("invokeMethod2"), argumentList);
    }

    inline QDBusReply<QDBusVariant> invokeMethod3(const QString &widgetName, const QString &member, const QDBusVariant &val0, const QDBusVariant &val1, const QDBusVariant &val2)
    {
        QList<QVariant> argumentList;
        argumentList << qVariantFromValue(widgetName) << qVariantFromValue(member) << qVariantFromValue(val0) << qVariantFromValue(val1) << qVariantFromValue(val2);
        return callWithArgumentList(QDBus::Block, QLatin1String("invokeMethod3"), argumentList);
    }

    inline QDBusReply<QDBusVariant> invokeMethod4(const QString &widgetName, const QString &member, const QDBusVariant &val0, const QDBusVariant &val1, const QDBusVariant &val2, const QDBusVariant &val3)
    {
        QList<QVariant> argumentList;
        argumentList << qVariantFromValue(widgetName) << qVariantFromValue(member) << qVariantFromValue(val0) << qVariantFromValue(val1) << qVariantFromValue(val2) << qVariantFromValue(val3);
        return callWithArgumentList(QDBus::Block, QLatin1String("invokeMethod4"), argumentList);
    }

    inline QDBusReply<QDBusVariant> invokeMethod5(const QString &widgetName, const QString &member, const QDBusVariant &val0, const QDBusVariant &val1, const QDBusVariant &val2, const QDBusVariant &val3, const QDBusVariant &val4)
    {
        QList<QVariant> argumentList;
        argumentList << qVariantFromValue(widgetName) << qVariantFromValue(member) << qVariantFromValue(val0) << qVariantFromValue(val1) << qVariantFromValue(val2) << qVariantFromValue(val3) << qVariantFromValue(val4);
        return callWithArgumentList(QDBus::Block, QLatin1String("invokeMethod5"), argumentList);
    }

    inline QDBusReply<void> message()
    {
        QList<QVariant> argumentList;
        return callWithArgumentList(QDBus::Block, QLatin1String("message"), argumentList);
    }

    inline QDBusReply<QStringList> methods(const QString &widgetName)
    {
        QList<QVariant> argumentList;
        argumentList << qVariantFromValue(widgetName);
        return callWithArgumentList(QDBus::Block, QLatin1String("methods"), argumentList);
    }

    inline QDBusReply<void> onSecondInstanceDetected()
    {
        QList<QVariant> argumentList;
        return callWithArgumentList(QDBus::Block, QLatin1String("onSecondInstanceDetected"), argumentList);
    }

    inline QDBusReply<QStringList> parameters()
    {
        QList<QVariant> argumentList;
        return callWithArgumentList(QDBus::Block, QLatin1String("parameters"), argumentList);
    }

    inline QDBusReply<QStringList> properties(const QString &widgetName)
    {
        QList<QVariant> argumentList;
        argumentList << qVariantFromValue(widgetName);
        return callWithArgumentList(QDBus::Block, QLatin1String("properties"), argumentList);
    }

    inline QDBusReply<void> quit()
    {
        QList<QVariant> argumentList;
        return callWithArgumentList(QDBus::Block, QLatin1String("quit"), argumentList);
    }

    inline QDBusReply<void> raise()
    {
        QList<QVariant> argumentList;
        return callWithArgumentList(QDBus::Block, QLatin1String("raise"), argumentList);
    }

    inline QDBusReply<QDBusVariant> readProperty(const QString &objectName, const QString &propertyName)
    {
        QList<QVariant> argumentList;
        argumentList << qVariantFromValue(objectName) << qVariantFromValue(propertyName);
        return callWithArgumentList(QDBus::Block, QLatin1String("readProperty"), argumentList);
    }

    inline QDBusReply<QString> version()
    {
        QList<QVariant> argumentList;
        return callWithArgumentList(QDBus::Block, QLatin1String("version"), argumentList);
    }

    inline QDBusReply<QStringList> widgetList()
    {
        QList<QVariant> argumentList;
        return callWithArgumentList(QDBus::Block, QLatin1String("widgetList"), argumentList);
    }

    inline QDBusReply<void> writeProperty(const QString &objectName, const QString &propertyName, const QDBusVariant &value)
    {
        QList<QVariant> argumentList;
        argumentList << qVariantFromValue(objectName) << qVariantFromValue(propertyName) << qVariantFromValue(value);
        return callWithArgumentList(QDBus::Block, QLatin1String("writeProperty"), argumentList);
    }

Q_SIGNALS: // SIGNALS
    void applicationStarted();
};

namespace it {
  namespace elettra {
    namespace trieste {
      typedef ::TApplicationInterface TApplicationsInterface;
    }
  }
}
#endif
