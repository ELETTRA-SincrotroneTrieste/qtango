/*
 * This file was generated by dbusxml2cpp version 0.6
 * Command line was: dbusxml2cpp DeviceThreadFactory.xml -a DeviceThreadFactoryAdaptor -c DeviceThreadFactoryAdaptor
 *
 * dbusxml2cpp is Copyright (C) 2008 Nokia Corporation and/or its subsidiary(-ies).
 *
 * This is an auto-generated file.
 * This file may have been hand-edited. Look for HAND-EDIT comments
 * before re-generating it.
 */

#ifndef DEVICETHREADFACTORYADAPTOR_H_1283264785
#define DEVICETHREADFACTORYADAPTOR_H_1283264785

#include <QtCore/QObject>
#include <QtDBus/QtDBus>
class QByteArray;
template<class T> class QList;
template<class Key, class Value> class QMap;
class QString;
class QStringList;
class QVariant;

/*
 * Adaptor class for interface it.elettra.trieste.TApplicationsInterface.deviceThreadFactory
 */
class DeviceThreadFactoryAdaptor: public QDBusAbstractAdaptor
{
    Q_OBJECT
    Q_CLASSINFO("D-Bus Interface", "it.elettra.trieste.TApplicationsInterface.deviceThreadFactory")
    Q_CLASSINFO("D-Bus Introspection", ""
"  <interface name=\"it.elettra.trieste.TApplicationsInterface.deviceThreadFactory\" >\n"
"    <property direction=\"out\" access=\"read\" type=\"as\" name=\"threads\" />\n"
"    <property direction=\"out\" access=\"read\" type=\"i\" name=\"threadCount\" />\n"
"  </interface>\n"
        "")
public:
    DeviceThreadFactoryAdaptor(QObject *parent);
    virtual ~DeviceThreadFactoryAdaptor();

public: // PROPERTIES
    Q_PROPERTY(int threadCount READ threadCount)
    int threadCount() const;

    Q_PROPERTY(QStringList threads READ threads)
    QStringList threads() const;

public Q_SLOTS: // METHODS
Q_SIGNALS: // SIGNALS
};

#endif
